// <auto-generated />
using System;
using LLMStudio.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LLMStudio.Data.Migrations
{
    [DbContext(typeof(LLMDbContext))]
    [Migration("20250604212855_InitialModelsCreation")]
    partial class InitialModelsCreation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LLMStudio.Data.Models.Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EnvironmentVariable")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("environment_variable");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("identifier");

                    b.Property<int>("ModelTypeId")
                        .HasColumnType("int")
                        .HasColumnName("model_type_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<double>("Temperature")
                        .HasColumnType("float")
                        .HasColumnName("temperature");

                    b.HasKey("Id");

                    b.HasIndex("ModelTypeId");

                    b.ToTable("models");
                });

            modelBuilder.Entity("LLMStudio.Data.Models.ModelType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("model_types");
                });

            modelBuilder.Entity("LLMStudio.Data.Models.Prompt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("PromptText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("prompt");

                    b.Property<string>("Response")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("response");

                    b.Property<int>("ThreadId")
                        .HasColumnType("int")
                        .HasColumnName("thread_id");

                    b.HasKey("Id");

                    b.HasIndex("ThreadId");

                    b.ToTable("prompts");
                });

            modelBuilder.Entity("LLMStudio.Data.Models.Thread", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("ModelId")
                        .HasColumnType("int")
                        .HasColumnName("model_id");

                    b.Property<int?>("ModelId1")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("title");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<int?>("UserId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ModelId");

                    b.HasIndex("ModelId1");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.HasIndex("UserId1");

                    b.ToTable("threads");
                });

            modelBuilder.Entity("LLMStudio.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("password");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("users");
                });

            modelBuilder.Entity("LLMStudio.Data.Models.Model", b =>
                {
                    b.HasOne("LLMStudio.Data.Models.ModelType", "Provider")
                        .WithMany("Models")
                        .HasForeignKey("ModelTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("LLMStudio.Data.Models.Prompt", b =>
                {
                    b.HasOne("LLMStudio.Data.Models.Thread", "Thread")
                        .WithMany("Prompts")
                        .HasForeignKey("ThreadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Thread");
                });

            modelBuilder.Entity("LLMStudio.Data.Models.Thread", b =>
                {
                    b.HasOne("LLMStudio.Data.Models.Model", "Model")
                        .WithMany()
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LLMStudio.Data.Models.Model", null)
                        .WithMany("Threads")
                        .HasForeignKey("ModelId1");

                    b.HasOne("LLMStudio.Data.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LLMStudio.Data.Models.User", null)
                        .WithMany("Threads")
                        .HasForeignKey("UserId1");

                    b.Navigation("Model");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LLMStudio.Data.Models.Model", b =>
                {
                    b.Navigation("Threads");
                });

            modelBuilder.Entity("LLMStudio.Data.Models.ModelType", b =>
                {
                    b.Navigation("Models");
                });

            modelBuilder.Entity("LLMStudio.Data.Models.Thread", b =>
                {
                    b.Navigation("Prompts");
                });

            modelBuilder.Entity("LLMStudio.Data.Models.User", b =>
                {
                    b.Navigation("Threads");
                });
#pragma warning restore 612, 618
        }
    }
}
